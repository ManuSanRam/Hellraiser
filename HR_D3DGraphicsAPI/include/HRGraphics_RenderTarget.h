#pragma once

/*!******************************************************************************************************************************************************************************

	@file		HRGraphics_RenderTarget.h

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	This file contains the declaration of he render target object, used to render 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	@date		22-07-2017
	@author		Manuel Santos Ramón [ManuSanRam]
	@copyright	Infernal Coders S.A

********************************************************************************************************************************************************************************/

#include "HRGraphics_Prerequisites.h"
#include "HRGraphics_Depth.h"
#include <HRUtility_Color.h>

namespace HR_SDK
{
	struct GraphicsDevice;
	struct GraphicsDeviceContext;
	struct GraphicsSwapChain;

	struct GraphicsRenderTargetView;
	struct GraphicsTexture;

	/*!**************************************************************************************************************************************************************************

		@brief Render target object 

	****************************************************************************************************************************************************************************/
	class HR_D3DGRAPHICSAPI_EXPORT C_RenderTarget
	{
	public:
		/*!**********************************************************************************************************************************************************************

			@brief Constructor [Default]

		************************************************************************************************************************************************************************/
		C_RenderTarget()
		{
			m_RTV = nullptr;
		}

		/*!**********************************************************************************************************************************************************************

			@brief Destructor

		************************************************************************************************************************************************************************/
		~C_RenderTarget()
		{

		}

		/*!**********************************************************************************************************************************************************************
			
			@brief Creates a render target

		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

			@param _device GPU device 
			@param _swapChain Swap chain where render target is targeted

		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

			@return True if render target is created successfully, false if an error was encountered

		************************************************************************************************************************************************************************/
		bool		Create
		(
			GraphicsDevice* _device,
			GraphicsSwapChain* _swapChain
		);



		/*!**********************************************************************************************************************************************************************

			@brief Creates a render target

		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

			@param _device GPU device
			@param _swapChain Swap chain where render target is targeted

		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

			@return True if render target is created successfully, false if an error was encountered

		************************************************************************************************************************************************************************/
		bool		CreateRendereable
		(
			GraphicsDevice* _device,
			GraphicsSwapChain* _swapChain
		);
		


		/*!**********************************************************************************************************************************************************************

			@brief Sets a render target to the GPU

		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

			@param _devContext GPU device
			@param[in] _numViews Swap chain where render target is targeted
			@param[in] _depthStencil Depth stencil object 

		************************************************************************************************************************************************************************/
		void		Set
		(
			GraphicsDeviceContext* _devContext,
			uint32 _numViews,
			C_DepthStencil* _depthStencil
		);

		/*!**********************************************************************************************************************************************************************

			@brief Clears a render target to draw new data

		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

			@param _devContext Device context used to set the render target at 
			@param[in] _color Clear color passed to the render target

		************************************************************************************************************************************************************************/
		void		Clear
		(
			GraphicsDeviceContext* _devContext,
			C_LinearColor& _color
		);

		/*!**********************************************************************************************************************************************************************

			@brief Releases and deallocates the render target object

		************************************************************************************************************************************************************************/
		void		Close
		(

		);

		/*!**********************************************************************************************************************************************************************

			@brief Pointer to API-specific render target structure 

		************************************************************************************************************************************************************************/
		GraphicsRenderTargetView* m_RTV;
	};
}
